version: "3.8"
services:
  ###
  ### MYSQL - BDD
  ###
  mysql:
    container_name: "prediction-presidential-mysql"
    image: "mysql:latest"
    restart: unless-stopped
    volumes:
      - prediction-presidential-mysql-data:/var/lib/mysql
      - ./database/seed-prediction-presidential.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - "3306:3306"
    networks:
      - "prediction-presidential-network"

  ###
  ### PHPMYADMIN - VISUALISATION BDD
  ###
  phpmyadmin:
    container_name: "prediction-presidential-phpmyadmin"
    image: "phpmyadmin:latest"
    restart: unless-stopped
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
    ports:
      - "8080:80"
    networks:
      - "prediction-presidential-network"

  ###
  ### APP PYTHON - ETL PREDICT
  ###
  app-etl:
    container_name: "prediction-presidential-etl"
    build:
      context: .
      dockerfile: Dockerfile.etl
    restart: on-failure
    depends_on:
      - mysql
    environment:
      DB_HOST: mysql
      DB_USER: root
      DB_PASSWORD: ""
      DB_NAME: elections_presidentielles
      DB_PORT: 3306
    networks:
      - "prediction-presidential-network"

  ###
  ### APP PYTHON - MACHINE LEARNING
  ###
  app-machine-learning:
      container_name: "prediction-presidential-machine-learning"
      build:
          context: .
          dockerfile: Dockerfile.machine-learning
      restart: unless-stopped
      depends_on:
        - mysql
      environment:
        DB_HOST: mysql
        DB_USER: root
        DB_PASSWORD: ""
        DB_NAME: elections_presidentielles
        DB_PORT: 3306
      networks:
          - "prediction-presidential-network"

  # ###
  # ### SPARK MASTER
  # ###
  # spark-master:
  #   container_name: "prediction-presidential-spark-master"
  #   image: "bitnami/spark:latest"
  #   restart: unless-stopped
  #   environment:
  #     - SPARK_MODE=master
  #     - SPARK_RPC_AUTHENTICATION_ENABLED=no
  #     - SPARK_RPC_ENCRYPTION_ENABLED=no
  #     - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
  #     - SPARK_SSL_ENABLED=no
  #     - SPARK_DAEMON_MEMORY=1G
  #     - SPARK_DRIVER_MEMORY=2G
  #     - SPARK_EXECUTOR_MEMORY=2G
  #     - SPARK_WORKER_CLEANUP_ENABLED=true
  #     - SPARK_WORKER_CLEANUP_INTERVAL=86400
  #     - SPARK_LOG_DIR=/opt/bitnami/spark/logs
  #     - SPARK_MASTER_OPTS="-Dspark.deploy.defaultCores=1"
  #     - SPARK_EVENTLOG_ENABLED=true
  #     - SPARK_EVENTLOG_DIR=/opt/bitnami/spark/spark-events
  #   ports:
  #     - "8082:8080"  # Interface web de Spark
  #     - "7077:7077"  # Port Spark Master
  #   volumes:
  #     - spark-master-logs:/opt/bitnami/spark/logs
  #     - spark-master-work:/opt/bitnami/spark/work
  #     - spark-events:/opt/bitnami/spark/spark-events
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8080"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3
  #     start_period: 30s
  #   networks:
  #     - "prediction-presidential-network"

  # ###
  # ### SPARK WORKER 1
  # ###
  # spark-worker-1:
  #   container_name: "prediction-presidential-spark-worker-1"
  #   image: "bitnami/spark:latest"
  #   restart: unless-stopped
  #   environment:
  #     - SPARK_MODE=worker
  #     - SPARK_MASTER_URL=spark://spark-master:7077
  #     - SPARK_WORKER_MEMORY=4G
  #     - SPARK_WORKER_CORES=3
  #     - SPARK_RPC_AUTHENTICATION_ENABLED=no
  #     - SPARK_RPC_ENCRYPTION_ENABLED=no
  #     - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
  #     - SPARK_SSL_ENABLED=no
  #     - SPARK_DAEMON_MEMORY=1G
  #     - SPARK_EXECUTOR_MEMORY=3G
  #     - SPARK_WORKER_CLEANUP_ENABLED=true
  #     - SPARK_WORKER_CLEANUP_INTERVAL=86400
  #     - SPARK_LOG_DIR=/opt/bitnami/spark/logs
  #     - SPARK_WORKER_OPTS="-Dspark.worker.cleanup.enabled=true"
  #     - SPARK_EVENTLOG_ENABLED=true
  #     - SPARK_EVENTLOG_DIR=/opt/bitnami/spark/spark-events
  #   ports:
  #     - "8083:8081"  # Interface web du Worker
  #   volumes:
  #     - spark-worker1-logs:/opt/bitnami/spark/logs
  #     - spark-worker1-work:/opt/bitnami/spark/work
  #     - spark-events:/opt/bitnami/spark/spark-events
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8081"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3
  #     start_period: 30s
  #   depends_on:
  #     - spark-master
  #   networks:
  #     - "prediction-presidential-network"

  # ###
  # ### SPARK WORKER 2
  # ###
  # spark-worker-2:
  #   container_name: "prediction-presidential-spark-worker-2"
  #   image: "bitnami/spark:latest"
  #   restart: unless-stopped
  #   environment:
  #     - SPARK_MODE=worker
  #     - SPARK_MASTER_URL=spark://spark-master:7077
  #     - SPARK_WORKER_MEMORY=4G
  #     - SPARK_WORKER_CORES=3
  #     - SPARK_RPC_AUTHENTICATION_ENABLED=no
  #     - SPARK_RPC_ENCRYPTION_ENABLED=no
  #     - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
  #     - SPARK_SSL_ENABLED=no
  #     - SPARK_DAEMON_MEMORY=1G
  #     - SPARK_EXECUTOR_MEMORY=3G
  #     - SPARK_WORKER_CLEANUP_ENABLED=true
  #     - SPARK_WORKER_CLEANUP_INTERVAL=86400
  #     - SPARK_LOG_DIR=/opt/bitnami/spark/logs
  #     - SPARK_WORKER_OPTS="-Dspark.worker.cleanup.enabled=true"
  #     - SPARK_EVENTLOG_ENABLED=true
  #     - SPARK_EVENTLOG_DIR=/opt/bitnami/spark/spark-events
  #   ports:
  #     - "8084:8081"  # Interface web du Worker
  #   volumes:
  #     - spark-worker2-logs:/opt/bitnami/spark/logs
  #     - spark-worker2-work:/opt/bitnami/spark/work
  #     - spark-events:/opt/bitnami/spark/spark-events
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8081"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3
  #     start_period: 30s
  #   depends_on:
  #     - spark-master
  #   networks:
  #     - "prediction-presidential-network"

networks:
  prediction-presidential-network:
    driver: "bridge"
    name: "prediction-presidential-network"

volumes:
  prediction-presidential-mysql-data:
    name: "prediction-presidential-mysql-data"
  spark-master-logs:
    name: "prediction-presidential-spark-master-logs"
  spark-master-work:
    name: "prediction-presidential-spark-master-work"
  spark-worker1-logs:
    name: "prediction-presidential-spark-worker1-logs"
  spark-worker1-work:
    name: "prediction-presidential-spark-worker1-work"
  spark-worker2-logs:
    name: "prediction-presidential-spark-worker2-logs"
  spark-worker2-work:
    name: "prediction-presidential-spark-worker2-work"

